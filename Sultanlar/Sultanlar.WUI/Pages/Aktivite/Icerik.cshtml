@page
@model IcerikModel
@{
    ViewData["Title"] = "Aktivite İçeriği";
}

@section head {
    <link rel="stylesheet" href="https://cdn.datatables.net/v/bs/dt-1.10.18/r-2.2.2/datatables.min.css" />

    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/v/bs/dt-1.10.18/r-2.2.2/datatables.min.js"></script>
    <script src="https://cdn.datatables.net/plug-ins/1.10.19/api/sum().js"></script>

    <script>
        var table;
        var paramsmref;
        var paramftip;
        var paramtip;
        var paramdonem;
        var anlasmaid;
        var aktiviteid;
        var sepet;
        var ahtyeg;

        var kolonlar = [
            {
                "mDataProp": "itemref", title: "Kod", "class": "keyTd", render: function (data, type, row) {
                    return '<span class="sinirli itemref">' + data + '</span>';
                }
            },
            {
                "mDataProp": "malacik", title: "Malzeme", "class": "valueTd", render: function (data, type, row) {
                    return '<span class="sinirli malacik">' + data + '</span>';
                }
            },
            {
                "mDataProp": "miktar", title: "S.H.", "class": "keyTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + data + ' koli</span>';
                }
            },
            {
                "mDataProp": "birimfiyat", title: "B.F.", "class": "floaTd", render: function (data, type, row) {
                    return '<span class="sinirli netkdv">' + parseFloat(data).formatMoney(3, ',', '.') + '</span>';
                }
            },
            {
                "mDataProp": "fatalt", title: "F.A.", "class": "floaTd", render: function (data, type, row) {
                    return '<span class="sinirli fatalt">' + data + '</span>';
                }
            },
            {
                "mDataProp": "fataltciro", title: "F.A.C.", "class": "floaTd", render: function (data, type, row) {
                    return '<span class="sinirli fataltciro">' + data + '</span>';
                }
            },
            {
                "mDataProp": "ciroprim", title: "C.P.D.", "class": "floaTd", render: function (data, type, row) {
                    return '<span class="sinirli cpd">' + data + '</span>';
                }
            },
            {
                "mDataProp": null, title: "Isk.", "class": "keyTd", render: function (data, type, row) {
                    return '<input type="text" id="isk' + data.itemref + '" class="inputSecim" value="' + parseFloat(data.iskonto).toFixed(2) + '" autocomplete="off" />';
                }
            },
            {
                "mDataProp": null, title: "C.P.T.", "class": "floaTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + iskDusCoklu(data.birimfiyat, data.fatalt, data.fataltciro, data.iskonto, data.ciroprim).formatMoney(3, ',', '.') + '</span>';
                }
            },
            {
                "mDataProp": null, title: "KDV'siz", "class": "floaTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + kdvDus(iskDusCoklu(data.birimfiyat, data.fatalt, data.fataltciro, data.iskonto, 0), data.kdv).formatMoney(3, ',', '.') + '</span>';
                }
            },
            {
                "mDataProp": null, title: "KDV'li", "class": "keyTd", render: function (data, type, row) {
                    return '<input type="text" id="fiy' + data.itemref + '" class="inputFiyat" value="' + parseFloat(iskDusCoklu(data.birimfiyat, data.fatalt, data.fataltciro, data.iskonto, 0)).toFixed(3) + '" autocomplete="off" />';
                }
            },
            {
                "mDataProp": null, title: "Açk.", "class": "keyTd", render: function (data, type, row) {
                    return '<input type="text" id="ack' + data.itemref + '" class="inputAck btn" value="' + data.aciklama + '" style="width: 100px" autocomplete="off" />';
                }
            },
            {
                "mDataProp": null, title: "", "class": "keyTd", render: function (data, type, row) {
                    return '<input type="button" class="btn btn-danger" value="Sil" onclick="urunSil(' + data.itemref + ')" />';
                }
            }
        ];

        function initSepet() {
            var cookie = JSON.parse(getLocal());
            for (var i = 0; i < cookie.length; i++) {
                if (cookie[i].smref == paramsmref && cookie[i].tip == paramtip && cookie[i].donem == paramdonem && cookie[i].aktiviteid == aktiviteid && cookie[i].anlasmaid == anlasmaid && cookie[i].yegmi == ahtyeg) {
                    for (var j = 0; j < cookie[i].detaylar.length; j++) {
                        sepet.push(
                            {
                                itemref: cookie[i].detaylar[j].itemref,
                                malacik: cookie[i].detaylar[j].malacik,
                                kdv: cookie[i].detaylar[j].kdv,
                                miktar: cookie[i].detaylar[j].miktar,
                                birimfiyat: cookie[i].detaylar[j].birimfiyat,
                                fatalt: cookie[i].detaylar[j].fatalt,
                                fataltciro: cookie[i].detaylar[j].fataltciro,
                                ciroprim: cookie[i].detaylar[j].ciroprim,
                                pazisk: cookie[i].detaylar[j].pazisk,
                                iskonto: cookie[i].detaylar[j].iskonto,
                                cirodusulmus: cookie[i].detaylar[j].cirodusulmus,
                                kdvli: cookie[i].detaylar[j].kdvli,
                                aciklama: cookie[i].detaylar[j].aciklama
                            }
                        );
                    }
                }
            }
        }

        function aktGoster() {
            table = $('#dtTable').dataTable({
                "scrollX": true,
                "aaData": sepet,
                "aoColumns": kolonlar,
                "language": defaultDtLang,
                "paging": true,
                "ordering": false,
                "info": false,
                "searching": false,
                "initComplete": function (settings, json) {
                    var api = this.api();
                    $(api.column(0).footer()).html(api.column(0, { page: 'all' }).data().count() + " Satır");
                    $(api.column(3).footer()).html(api.column(3, { page: 'all' }).data().sum().formatMoney(3, ',', '.'));
                }
            });
        }

        function getLocal() {
            return window.localStorage['sepetA'];
        }

        function senkRoot() {
            var cookie = JSON.parse(getLocal());
            for (var i = 0; i < cookie.length; i++) {
                if (cookie[i].smref == paramsmref && cookie[i].tip == paramtip && cookie[i].donem == paramdonem && cookie[i].aktiviteid == aktiviteid && cookie[i].anlasmaid == anlasmaid && cookie[i].yegmi == ahtyeg) {
                    cookie[i].detaylar = [];
                    for (var j = 0; j < sepet.length; j++) {
                        cookie[i].detaylar.push(
                            {
                                itemref: sepet[j].itemref,
                                malacik: sepet[j].malacik,
                                kdv: sepet[j].kdv,
                                miktar: sepet[j].miktar,
                                birimfiyat: sepet[j].birimfiyat,
                                fatalt: sepet[j].fatalt,
                                fataltciro: sepet[j].fataltciro,
                                ciroprim: sepet[j].ciroprim,
                                pazisk: sepet[j].pazisk,
                                iskonto: sepet[j].iskonto,
                                cirodusulmus: sepet[j].cirodusulmus,
                                kdvli: sepet[j].kdvli,
                                aciklama: sepet[j].aciklama
                            });
                    }
                }
            }
            window.localStorage['sepetA'] = JSON.stringify(cookie);
        }

        function urunSil(itemref) {
            var yenisepet = [];
            for (var i = 0; i < sepet.length; i++) {
                if (sepet[i].itemref != itemref) {
                    yenisepet.push({
                        itemref: sepet[i].itemref,
                        malacik: sepet[i].malacik,
                        kdv: sepet[i].kdv,
                        miktar: sepet[i].miktar,
                        birimfiyat: sepet[i].birimfiyat,
                        fatalt: sepet[i].fatalt,
                        fataltciro: sepet[i].fataltciro,
                        ciroprim: sepet[i].ciroprim,
                        pazisk: sepet[i].pazisk,
                        iskonto: sepet[i].iskonto,
                        cirodusulmus: sepet[i].cirodusulmus,
                        kdvli: sepet[i].kdvli,
                        aciklama: sepet[i].aciklama
                    });
                }
            }
            sepet = yenisepet;
            senkRoot();
            //window.location.href = window.location.href;
            table.dataTable().fnDestroy();
            aktGoster();
            keyuplar();
        }

        function urunGuncelle(itemref, isk, ack, kontrol) {
            isk = isk.toString().trim() == '' ? 0 : isk;
            var yenisepet = [];
            for (var i = 0; i < sepet.length; i++) {
                if (sepet[i].itemref != itemref) {
                    yenisepet.push({
                        itemref: sepet[i].itemref,
                        malacik: sepet[i].malacik,
                        kdv: sepet[i].kdv,
                        miktar: sepet[i].miktar,
                        birimfiyat: sepet[i].birimfiyat,
                        fatalt: sepet[i].fatalt,
                        fataltciro: sepet[i].fataltciro,
                        ciroprim: sepet[i].ciroprim,
                        pazisk: sepet[i].pazisk,
                        iskonto: sepet[i].iskonto,
                        cirodusulmus: sepet[i].cirodusulmus,
                        kdvli: sepet[i].kdvli,
                        aciklama: sepet[i].aciklama
                    });
                }
                else {
                    yenisepet.push({
                        itemref: sepet[i].itemref,
                        malacik: sepet[i].malacik,
                        kdv: sepet[i].kdv,
                        miktar: sepet[i].miktar,
                        birimfiyat: sepet[i].birimfiyat,
                        fatalt: sepet[i].fatalt,
                        fataltciro: sepet[i].fataltciro,
                        ciroprim: sepet[i].ciroprim,
                        pazisk: sepet[i].pazisk,
                        iskonto: isk,
                        cirodusulmus: sepet[i].cirodusulmus,
                        kdvli: sepet[i].kdvli,
                        aciklama: ack
                    });
                }
            }
            var yeksen = document.documentElement.scrollTop;
            sepet = yenisepet;
            senkRoot();
            //window.location.href = window.location.href;
            table.dataTable().fnDestroy();
            aktGoster();
            keyuplar();
            document.documentElement.scrollTop = yeksen;
            
            var kontrolid = $(kontrol).attr('id');
            var strLength = $(table).find("#" + kontrolid).val().length * 2;
            $(table).find("#" + kontrolid).focus();
            $(table).find("#" + kontrolid)[0].setSelectionRange(strLength, strLength);
            //setTimeout(function () { $(table).find("#ack" + itemref)[0].focus(); }, 3000);
        }

        function sil() {
            if (Object.keys(sepet).length != 0) {
                if (confirm("Aktivite içeriğini silmek istediğinize emin misiniz?")) {
                    sepetBosalt();
                    window.location.href = window.location.href;
                }
            }
        }

        function sSil() {
            if (confirm("Aktiviteyi silmek istediğinize emin misiniz?")) {
                aktSil(JSON.parse(getLocal()));
                if (aktiviteid != 0)
                    window.location.href = 'Sil?aktiviteid=' + aktiviteid;
                else
                    window.location.href = '../Musteri';
            }
        }

        function kaydet() {
            if (Object.keys(sepet).length != 0) {
                if (confirm("Aktiviteyi kaydetmek istediğinize emin misiniz?")) {
                    window.location.href = 'Kaydet?onay=0&smref=' + paramsmref + '&tip=' + paramtip + '&fiyattipi=' + paramftip + '&donem=' + paramdonem + '&anlasmaid=' + anlasmaid + '&aktiviteid=' + aktiviteid + '&ahtyeg=' + ahtyeg;
                }
            }
        }

        function onayla() {
            if (Object.keys(sepet).length != 0) {
                if (confirm("Aktiviteyi kaydetmek ve onay talep etmek istediğinize emin misiniz?")) {
                    window.location.href = 'Kaydet?onay=1&smref=' + paramsmref + '&tip=' + paramtip + '&fiyattipi=' + paramftip + '&donem=' + paramdonem + '&anlasmaid=' + anlasmaid + '&aktiviteid=' + aktiviteid + '&ahtyeg=' + ahtyeg;
                }
            }
        }

        function sepetBosalt() {
            sepet = [];
            senkRoot();
        }

        function keyuplar() {
            $('.inputAck').on('keyup', delay(function (e) {
                var iskOnceki = parseFloat($(this).closest("tr").find(".inputSecim").val().replace(",", "."));
                urunGuncelle($(this).closest("tr").find(".itemref").text(), iskOnceki, this.value, this);
            }, 2000));
            $('.inputSecim').on('keyup', delay(function (e) {
                var ackOnceki = $(this).closest("tr").find(".inputAck").val();
                urunGuncelle($(this).closest("tr").find(".itemref").text(), parseFloat(this.value.replace(",", ".")), ackOnceki, this);
            }, 1000));
            $('.inputFiyat').on('keyup', delay(function (e) {
                var ackOnceki = $(this).closest("tr").find(".inputAck").val();
                $(this).closest("tr").find(".inputSecim").val(0);
                var itemref = $(this).closest("tr").find(".itemref").text();
                var fiyat = parseFloat($(this).closest("tr").find(".netkdv").text().replace(",", "."));
                var isk1 = parseFloat($(this).closest("tr").find(".fatalt").text().replace(",", "."));
                var isk2 = parseFloat($(this).closest("tr").find(".fataltciro").text().replace(",", "."));
                //var isk3 = $(this).closest("tr").find(".cpd").text();
                var isk = iskBul(fiyat, isk1, isk2, 0, parseFloat(this.value.replace(",", ".")));
                //$(this).closest("tr").find(".inputSecim").val(isk);
                urunGuncelle(itemref, isk, ackOnceki, this);
            }, 1000));
        }

        $(document).ready(function () {
            $('#divProgress').css("display", "none");
            paramsmref = getParameterByName('smref');
            paramtip = getParameterByName('tip');
            paramftip = getParameterByName('ftip');
            paramdonem = getParameterByName("donem");
            aktiviteid = getParameterByName('aktiviteid');
            anlasmaid = getParameterByName('anlasmaid');
            ahtyeg = parseFloat(getParameterByName("ahtyeg"));
            sepet = [];
            initSepet();
            aktGoster();
            keyuplar();

            /*table.on('page.dt', function () {
                keyuplar();
            });*/
        });
    </script>
}
<input type="button" class="btn btn-info secimTus" value="Ürün Listesine Dön" onclick="window.history.back()" />
<input type="button" class="btn btn-danger secimTus" value="İçeriği Sil" onclick="sil()" />
<input type="button" class="btn btn-danger secimTus" value="Aktiviteyi Sil" onclick="sSil()" />
<input type="button" class="btn btn-success secimTus" value="Aktiviteyi Kaydet" onclick="kaydet()" />
<input type="button" class="btn btn-success secimTus" value="Aktiviteyi Kaydet ve Onay Talep Et" onclick="onayla()" />
<table id="dtTable" class="table table-striped table-bordered" style="width:100%" data-page-length='400'>
    <thead>
        <tr>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
            <th class="keyTd"></th>
        </tr>
    </tfoot>
</table>