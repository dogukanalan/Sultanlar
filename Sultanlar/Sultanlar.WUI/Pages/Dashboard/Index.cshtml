@page
@model Sultanlar.WUI.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

@section head {
    <link rel="stylesheet" href="https://cdn.datatables.net/v/bs/dt-1.10.18/r-2.2.2/datatables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.5.2/css/buttons.dataTables.min.css" />

    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/v/bs/dt-1.10.18/r-2.2.2/datatables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/plug-ins/1.10.19/api/sum().js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script>
        function SaticilarGetir(uyeid) {
            $.ajax(
                {
                    xhr: function () { return xhrDownloadUpload(); },
                    beforeSend: function (xhr) { xhrTicket(xhr); },
                    type: 'POST',
                    url: apiurl + "satici",
                    data: '{ "uyeid": "' + uyeid + '" }',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (data, textStatus, response) {
                        checkAuth(response);

                        $("#selectSaticilar option").remove();
                        $("#selectSaticilarBolum option").remove();
                        if (window.localStorage["uyetipiid"] == "aZZA1PyhVTw=") {
                            $("#selectSaticilar").append($("<option></option>").text("Tümü").val("1"));
                            $("#selectSaticilarBolum").append($("<option></option>").text("Tümü").val("1"));
                            $("#bayisatishedef").css("display", "block");
                            $("#satishedefvgb").css("display", "block");
                            BayiSatisHedefGetir();
                            SatisHedefVgbGetir();
                        }
                        $.each(data, function (index, item) {
                            $("#selectSaticilar").append($("<option></option>").text(item.sattem).val(item.slsmanref));
                            $("#selectSaticilarBolum").append($("<option></option>").text(item.sattem).val(item.slsmanref));
                        });

                        HedefGetir();
                        BolumGetir();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) { console.log('hata'); }
                }
            );
        }

        var kolonSatisHedefVgb = [
            {
                "data": "musteri", "class": "valueTd", render: function (data, type, row) {
                    return '<span class="sinirli sinirli4">' + data + '</span>';
                }
            },
            {
                "data": "hedef", "class": "keyTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + data.formatMoney(2, ',', '.') + '</span>';
                }
            },
            {
                "data": "satis", "class": "keyTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + data.formatMoney(2, ',', '.') + '</span>';
                }
            },
            {
                "data": "vgb", "class": "keyTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + data.formatMoney(2, ',', '.') + '</span>';
                }
            },
            {
                "data": "vgbgun", "class": "keyTd", render: function (data, type, row) {
                    return '<span class="sinirli">' + data.formatMoney(1, ',', '.') + '</span>';
                }
            }
        ];
        aysatishedefvgb = new Date().getMonth() + 1;
        yilsatishedefvgb = new Date().getFullYear();
        function SatisHedefVgbGetir() {
            var url1 = apiurl + "dashboard/satishedefvgb/" + yilsatishedefvgb + "/" + aysatishedefvgb;
            var table = $('#dtTable').on('xhr.dt', function (e, settings, json, xhr) {
                checkAuth(xhr);
            }).DataTable({
                "responsive": true,
                "destroy": true,
                ajax: {
                    dataSrc: "",
                    xhr: function () { return xhrDownloadUpload(); },
                    beforeSend: function (xhr) { xhrTicket(xhr); },
                    url: url1
                },
                "initComplete": function (settings, json) {

                },
                "fnDrawCallback": function (oSettings) {
                    var api = this.api();
                    $("#spHedef").html(api.column(1, { page: 'all' }).data().sum().formatMoney(2, ',', '.'));
                    $("#spSatis").html(api.column(2, { page: 'all' }).data().sum().formatMoney(2, ',', '.'));
                },
                dom: 'Bfrtip',
                buttons: ['excel', 'pdf', 'print'],
                columns: kolonSatisHedefVgb,
                "language": defaultDtLang,
                "paging": true,
                "ordering": true,
                "info": false,
                "searching": true,
                "deferRender": true,
                "order": [[0, "asc"]]
            });
        }

        function BayiSatisHedefGetir() {
            $.ajax(
                {
                    xhr: function () { return xhrDownloadUpload(); },
                    beforeSend: function (xhr) { xhrTicket(xhr); },
                    url: apiurl + "dashboard/bayisatishedef/" + yilbayisatishedef + "/" + aybayisatishedef,
                    success: function (data, textStatus, response) {
                        checkAuth(response);

                        bayisatishedefcat = [];
                        bayisatishedefhed = [];
                        bayisatishedefsat = [];
                        for (var i = 0; i < data.length; i++) {
                            bayisatishedefcat.push(data[i].musteri);
                            bayisatishedefhed.push(data[i].hedef);
                            bayisatishedefsat.push(data[i].satis);
                        }
                        getBayiSatisHedefGraph();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) { console.log('hata'); }
                }
            );
        }

        function BolumGetir() {
            $.ajax(
                {
                    xhr: function () { return xhrDownloadUpload(); },
                    beforeSend: function (xhr) { xhrTicket(xhr); },
                    url: apiurl + "dashboard/bolum/" + yilbolum + "/" + slsrefbolum,
                    success: function (data, textStatus, response) {
                        checkAuth(response);

                        bolumdata = [{
                            name: 'ARI',
                            data: []
                        }, {
                            name: 'HAYAT',
                            data: []
                        }, {
                            name: 'TEMİZLİK',
                            data: []
                        }, {
                            name: 'YEG',
                            data: []
                        }];
                        for (var i = 0; i < data.length; i++) {
                            for (var j = 0; j < bolumdata.length; j++) {
                                if (data[i].bolum == bolumdata[j].name) {
                                    bolumdata[j].data.push(data[i].koli);
                                }
                            }
                        }
                        getBolumGraph();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) { console.log('hata'); }
                }
            );
        }

        function toplambolum() {
            var toplam = 0;
            var toplamari = 0;
            var toplamhayat = 0;
            var toplamtemizlik = 0;
            var toplamyeg = 0;
            for (var i = 0; i < bolumdata.length; i++) {
                for (var j = 0; j < bolumdata[i].data.length; j++) {
                    if (bolumdata[i].name == "ARI") {
                        toplamari += bolumdata[i].data[j];
                    }
                    else if (bolumdata[i].name == "HAYAT") {
                        toplamhayat += bolumdata[i].data[j];
                    }
                    else if (bolumdata[i].name == "TEMİZLİK") {
                        toplamtemizlik += bolumdata[i].data[j];
                    }
                    else if (bolumdata[i].name == "YEG") {
                        toplamyeg += bolumdata[i].data[j];
                    }
                    toplam += bolumdata[i].data[j];
                }
            }
            return toplam.formatMoney(0, 0, ".") + " (Arı: " + toplamari.formatMoney(0, 0, ".") + " Hayat: " + toplamhayat.formatMoney(0, 0, ".") + " Temizlik: " + toplamtemizlik.formatMoney(0, 0, ".") + " Yeg:" + toplamyeg.formatMoney(0, 0, ".") + ")";
        }

        function HedefGetir() {
            $.ajax(
                {
                    xhr: function () { return xhrDownloadUpload(); },
                    beforeSend: function (xhr) { xhrTicket(xhr); },
                    url: apiurl + "dashboard/hedef/" + yil + "/" + slsref,
                    success: function (data, textStatus, response) {
                        checkAuth(response);

                        hedefdata = data;
                        SatisGetir();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) { console.log('hata'); }
                }
            );
        }

        function SatisGetir() {
            $.ajax(
                {
                    xhr: function () { return xhrDownloadUpload(); },
                    beforeSend: function (xhr) { xhrTicket(xhr); },
                    url: apiurl + "dashboard/satis/" + yil + "/" + slsref,
                    success: function (data, textStatus, response) {
                        checkAuth(response);

                        satisdata = data;
                        getSatisHedefGraph();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) { console.log('hata'); }
                }
            );
        }

        function toplamhedef() {
            var toplam = 0;
            for (var i = 0; i < hedefdata.length; i++) {
                toplam += hedefdata[i];
            }
            return toplam.toFixed(0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function toplamsatis() {
            var toplam = 0;
            for (var i = 0; i < satisdata.length; i++) {
                toplam += satisdata[i];
            }
            return toplam.toFixed(0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        slsref = 1;
        yil = new Date().getFullYear();
        satisdata = [];
        hedefdata = [];

        function getSatisHedefGraph() {
            Highcharts.chart('divData', {

                title: {
                    text: 'Satış-Hedef aylık'
                },

                subtitle: {
                    text: "Hedef: " + toplamhedef() + " Satış: " + toplamsatis()
                },

                yAxis: {
                    title: {
                        text: 'Koli'
                    }
                },

                xAxis: {
                    accessibility: {
                        rangeDescription: 'Ocak - Aralık'
                    }
                },

                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },

                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: true
                        },
                        enableMouseTracking: false
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        pointStart: 1
                    }
                },

                series: [{
                    name: 'Satış',
                    data: satisdata
                }, {
                    name: 'Hedef',
                    data: hedefdata
                }],

                responsive: {
                    rules: [{
                        condition: {
                            maxWidth: 500
                        },
                        chartOptions: {
                            legend: {
                                layout: 'horizontal',
                                align: 'center',
                                verticalAlign: 'bottom'
                            }
                        }
                    }]
                }

            });
        }


        slsrefbolum = 1;
        yilbolum = new Date().getFullYear();
        bolumdata = [{
            name: 'ARI',
            data: []
        }, {
            name: 'HAYAT',
            data: []
        }, {
            name: 'TEMİZLİK',
            data: []
        }, {
            name: 'YEG',
            data: []
        }];

        function getBolumGraph() {
            Highcharts.chart('divBolum', {

                title: {
                    text: 'Bölüm bazında satış'
                },

                subtitle: {
                    text: "Toplam satış: " + toplambolum()
                },

                yAxis: {
                    title: {
                        text: 'Koli'
                    }
                },

                xAxis: {
                    accessibility: {
                        rangeDescription: 'Ocak - Aralık'
                    }
                },

                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },

                plotOptions: {
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        pointStart: 1
                    }
                },

                series: bolumdata,

                responsive: {
                    rules: [{
                        condition: {
                            maxWidth: 500
                        },
                        chartOptions: {
                            legend: {
                                layout: 'horizontal',
                                align: 'center',
                                verticalAlign: 'bottom'
                            }
                        }
                    }]
                }

            });
        }

        aybayisatishedef = new Date().getMonth() + 1;
        yilbayisatishedef = new Date().getFullYear();
        bayisatishedefcat = [];
        bayisatishedefhed = [];
        bayisatishedefsat = [];

        function getBayiSatisHedefGraph() {
            Highcharts.chart('divBayiSatisHedef', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Bayi üzerinde Hedef-Satış'
                },

                subtitle: {
                    text: "Toplam satış"
                },

                xAxis: {
                    categories: bayisatishedefcat
                },
                yAxis: [{
                    min: 0,
                    title: {
                        text: 'Hedef'
                    }
                }, {
                    title: {
                        text: 'Satış'
                    },
                    opposite: true
                }],
                legend: {
                    shadow: false
                },
                tooltip: {
                    shared: true
                },
                plotOptions: {
                    column: {
                        grouping: false,
                        shadow: false,
                        borderWidth: 0
                    }
                },
                series: [{
                    name: 'Hedef',
                    color: 'rgba(165,170,217,1)',
                    data: bayisatishedefhed,
                    pointPadding: 0.3,
                    pointPlacement: -0.2
                }, {
                    name: 'Satış',
                    color: 'rgba(186,60,61,.9)',
                    data: bayisatishedefsat,
                    pointPadding: 0.4,
                    pointPlacement: -0.2
                }]
            });
        }

        $(document).ready(function () {
            $('#selectYilSatishedefvgb').empty();
            $("#selectYilSatishedefvgb").append($("<option />").val("2022").text("2022"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2021").text("2021"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2020").text("2020"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2019").text("2019"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2018").text("2018"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2017").text("2017"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2016").text("2016"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2015").text("2015"));
            $("#selectYilSatishedefvgb").append($("<option />").val("2014").text("2014"));
            $('select[name=selectAySatishedefvgb]').val((new Date().getMonth() + 1).toString());

            $('#selectYilBolum').empty();
            $("#selectYilBolum").append($("<option />").val("2022").text("2022"));
            $("#selectYilBolum").append($("<option />").val("2021").text("2021"));
            $("#selectYilBolum").append($("<option />").val("2020").text("2020"));
            $("#selectYilBolum").append($("<option />").val("2019").text("2019"));
            $("#selectYilBolum").append($("<option />").val("2018").text("2018"));
            $("#selectYilBolum").append($("<option />").val("2017").text("2017"));
            $("#selectYilBolum").append($("<option />").val("2016").text("2016"));
            $("#selectYilBolum").append($("<option />").val("2015").text("2015"));
            $("#selectYilBolum").append($("<option />").val("2014").text("2014"));

            $('#selectYilBayiSatisHedef').empty();
            $("#selectYilBayiSatisHedef").append($("<option />").val("2022").text("2022"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2021").text("2021"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2020").text("2020"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2019").text("2019"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2018").text("2018"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2017").text("2017"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2016").text("2016"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2015").text("2015"));
            $("#selectYilBayiSatisHedef").append($("<option />").val("2014").text("2014"));
            $('select[name=selectAyBayiSatisHedef]').val((new Date().getMonth() + 1).toString());

            SaticilarGetir(window.localStorage["uyeid"]);
            $('#selectSaticilar').on('change', function (e) {
                slsref = this.value;
                HedefGetir();
            });
            $('#selectYil').on('change', function (e) {
                yil = this.value;
                HedefGetir();
            });
            $('#selectSaticilarBolum').on('change', function (e) {
                slsrefbolum = this.value;
                BolumGetir();
            });
            $('#selectYilBolum').on('change', function (e) {
                yilbolum = this.value;
                BolumGetir();
            });
            $('#selectYilBayiSatisHedef').on('change', function (e) {
                yilbayisatishedef = this.value;
                BayiSatisHedefGetir();
            });
            $('#selectAyBayiSatisHedef').on('change', function (e) {
                aybayisatishedef = this.value;
                BayiSatisHedefGetir();
            });
            $('#selectYilSatishedefvgb').on('change', function (e) {
                yilsatishedefvgb = this.value;
                SatisHedefVgbGetir();
            });
            $('#selectAySatishedefvgb').on('change', function (e) {
                aysatishedefvgb = this.value;
                SatisHedefVgbGetir();
            });
        });
    </script>
}
<div id="satishedefvgb" style="display: none">
    <select id="selectYilSatishedefvgb" name="selectYilSatishedefvgb" class="dropDown selYil">
    </select>
    <select id="selectAySatishedefvgb" name="selectAySatishedefvgb" class="dropDown selSaticilar">
        <option value="1">Ocak</option>
        <option value="2">Şubat</option>
        <option value="3">Mart</option>
        <option value="4">Nisan</option>
        <option value="5">Mayıs</option>
        <option value="6">Haziran</option>
        <option value="7">Temmuz</option>
        <option value="8">Ağustos</option>
        <option value="9">Eylül</option>
        <option value="10">Ekim</option>
        <option value="11">Kasım</option>
        <option value="12">Aralık</option>
    </select>
    <table id="dtTable" class="table table-striped table-bordered" style="width:100%" data-page-length='10'>
        <thead>
            <tr>
                <th class="keyTd" data-priority="1"><span class="spanCiplak">Müşteri</span></th>
                <th class="keyTd" data-priority="2"><span class="spanCiplak">Hedef</span></th>
                <th class="keyTd" data-priority="3"><span class="spanCiplak">Satış</span></th>
                <th class="keyTd"><span class="spanCiplak">Vgb</span></th>
                <th class="keyTd"><span class="spanCiplak">Vgb Gün</span></th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <th class="keyTd"><span class="spanCiplak">Toplam</span></th>
                <th class="keyTd"><span class="spanCiplak" id="spHedef">0</span></th>
                <th class="keyTd"><span class="spanCiplak" id="spSatis">0</span></th>
                <th class="keyTd"><span class="spanCiplak" id="spVgb"></span></th>
                <th class="keyTd"><span class="spanCiplak" id="spVgbgun"></span></th>
            </tr>
        </tfoot>
    </table>
</div>
<br />
<select id="selectSaticilar" name="selectSaticilar" class="dropDown selSaticilar grafikUstu">
    <option value="1" selected="selected">Seçiniz</option>
</select>
<select id="selectYil" name="selectYil" class="dropDown selYil grafikUstu">
</select>
<div id="divData"></div>
<br />
<div id="bayisatishedef" style="display: none">
    <select id="selectYilBayiSatisHedef" name="selectYilBayiSatisHedef" class="dropDown selYil grafikUstu">
    </select>
    <select id="selectAyBayiSatisHedef" name="selectAyBayiSatisHedef" class="dropDown selSaticilar grafikUstu">
        <option value="1">Ocak</option>
        <option value="2">Şubat</option>
        <option value="3">Mart</option>
        <option value="4">Nisan</option>
        <option value="5">Mayıs</option>
        <option value="6">Haziran</option>
        <option value="7">Temmuz</option>
        <option value="8">Ağustos</option>
        <option value="9">Eylül</option>
        <option value="10">Ekim</option>
        <option value="11">Kasım</option>
        <option value="12">Aralık</option>
    </select>
    <div id="divBayiSatisHedef"></div>
</div>
<br />
<select id="selectSaticilarBolum" name="selectSaticilarBolum" class="dropDown selSaticilar grafikUstu">
    <option value="1" selected="selected">Seçiniz</option>
</select>
<select id="selectYilBolum" name="selectYilBolum" class="dropDown selYil grafikUstu">
</select>
<div id="divBolum"></div>
